name: Backend Deployment

on:
  push:
    branches: [ master, main ]
    paths: [ 'backend/**' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Build application
        run: npm run build
        working-directory: ./backend

      - name: Run database migrations
        run: npx prisma migrate deploy
        working-directory: ./backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Railway Deployment
      - name: Deploy to Railway
        if: env.RAILWAY_TOKEN
        uses: railway-app/railway-action@v1
        with:
          token: ${{ secrets.RAILWAY_TOKEN }}
          command: 'up --service backend'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # Render Deployment
      - name: Deploy to Render
        if: env.RENDER_SERVICE_ID
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      # Docker Registry Push (for custom deployments)
      - name: Build and push Docker image
        if: env.DOCKER_REGISTRY
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/trossets-backend:latest
            ${{ secrets.DOCKER_REGISTRY }}/trossets-backend:${{ github.sha }}

      # Generic deployment notification
      - name: Deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Backend deployment completed successfully!"
          else
            echo "❌ Backend deployment failed!"
          fi
